-- TASK
-- Выведите названия всех треков, добавив информацию о датах, в которые эти треки покупали. Ни один трек не должен потеряться, даже если его не покупали вообще. Чтобы получить нужный результат, надо соединить три таблицы сразу, ведь таблица invoice, которая хранит данные о дате заказа, не содержит информации о купленных треках.
-- Сначала соедините таблицы track и invoice_line по ключу track_id, а затем присоедините таблицу invoice по ключу invoice_id. В итоговую таблицу поместите два поля: name из таблицы track и invoice_date из таблицы invoice. Приведите дату к нужному формату

SELECT t.name,
		CAST(inv.invoice_date AS date)   
FROM track AS t
LEFT OUTER JOIN invoice_line AS i ON i.track_id = t.track_id 
LEFT OUTER JOIN invoice AS inv ON inv.invoice_id = i.invoice_id;

-- TASK 
-- Посчитайте для каждого года число уникальных названий купленных треков.

SELECT EXTRACT(YEAR FROM CAST(invoice_date AS date)) AS year_of_invoice,
       COUNT(DISTINCT t.name)
FROM invoice AS i
LEFT OUTER JOIN invoice_line AS inv ON i.invoice_id = inv.invoice_id 
LEFT OUTER JOIN track AS t ON t.track_id = inv.track_id 
GROUP BY year_of_invoice;

-- TASK
-- Выгрузите таблицу из двух полей: первое поле с фамилией сотрудника, второе — с количеством пользователей, чьи запросы этот сотрудник обработал. Назовите поля employee_last_name и all_customers соответственно. Сгруппируйте записи по идентификатору сотрудника. Отсортируйте количество пользователей по убыванию, а фамилии сотрудников — в лексикографическом порядке.

SELECT s.last_name AS employee_last_name,
       COUNT(c.customer_id) AS all_customers
FROM staff AS s
LEFT OUTER JOIN client AS c ON c.support_rep_id = s.employee_id
GROUP BY employee_id
ORDER BY all_customers DESC, employee_last_name; 

-- TASK
--  У некоторых сотрудников есть менеджеры — их идентификаторы указаны в поле reports_to. Посмотрите внимательно на схему базы: таблица staff отсылает сама к себе. Это нормально, можно не создавать новую таблицу с менеджерами. 
Теперь можно разобраться в иерархии команды. Отобразите таблицу с двумя полями: в первое поле войдут фамилии всех сотрудников, а во второе — фамилии их менеджеров. Назовите поля employee_last_name и manager_last_name.

SELECT s.last_name AS employee_last_name,
       m.last_name AS manager_last_name
FROM staff AS s
LEFT JOIN staff AS m ON s.reports_to = m.employee_id;

-- TASK
--   Отобразите названия фильмов, в которых снимались актёры, не указанные в базе.

SELECT m.title AS movie_title
FROM movie AS m
LEFT OUTER JOIN film_actor AS fa ON fa.film_id = m.film_id
WHERE actor_id IS NULL;

-- TASK
-- Отобразите на экране имена исполнителей, для которых в базе данных не нашлось ни одного музыкального альбома.

SELECT a.name AS artist_name
FROM artist AS a
LEFT OUTER JOIN album AS al ON al.artist_id = a.artist_id
GROUP BY a.name
HAVING COUNT(al.title) = 0;


